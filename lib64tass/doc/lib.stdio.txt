
screen struct 

    screen_s    .struct
        row                 .byte   0
        col                 .byte   0
        border_color        .byte   0       ;           53280   border_color color    
        .union
        background_color    .byte   0       ;   col 0   53181   background color :  color 0
        background_color_0  .byte   0
        .endunion
        background_color_1  .byte   0       ;   col 1   53182   extra background :  color 1
        background_color_2  .byte   0       ;   col 2   53183   extra background :  color 2
        background_color_3  .byte   0       ;   col 3   53184   extra background :  color 3
        .union
        foreground_color        .byte   0   ;   foreground_color color
        background_color_number .byte   0   ;   00  01  10  11
        .endunion
        char        .byte   0
    .endstruct

##########
    txt
##########

    #   set_char_with_col_2_3

    input   :   
                screen.background_color_2
                screen.background_color_2
    output  :   
                a
                
    #   char_color_or
    
    table
    
        .byte   %00000000
        .byte   %01000000
        .byte   %10000000
        .byte   %11000000
        
    #   set_char_with_color_number
        
    input   :
                screen.background_color_number
                screen.char
    output  :
                screen.char
            
            
    #   set_char 

    input   :
                screen.char
                screen.col
                screen.row
    output  :
                set_char.pointer
                
    #   get_char 

    input   :
                screen.col
                screen.row
    output  :
                a ( get char )
                
                
    #   set_cc

    input   :    
                screen.col 
                screen.row 
                screen.char 
                screen.foreground_color
    output  :
                set_cc.screen_pointer
                set_cc.color_pointer
                
                
    #   set_border_color

    input   :    
                screen.border_color
    output  :
                $d020
                
    # set_background_color_ .proc
 
    input   :    
                screen.background_color
    output  :
                $d021
        

    # set_foreground_color 
 
    input   :    
                screen.foreground_color
                screen.col
                screen.row
    output  :
                set_foreground_color.pointer

    # get_foreground_color 
 
    input   :    
                screen.col
                screen.row
    output  :
                a ( fore ground color )
                

    #   clear_screen_chars
    
    input   :    
                a <- char
    output  :
                c64.screen_addr

    
    # clear_screen_colors 
    
    input   :    
                a <- color
    output  :
                c64.color_addr

    # screen_scroll_(left,right,up,down) 
    
    input   :    
                Carry   1   scroll text & char
                Carry   0   scroll text
    output  :
                //
                
##########
    std
##########

    #   print_u8_hex
    #   print_s8_hex
    
    input   :    
                a <- unsigned byte
                (C) 1 print $ 0 , no
    output  :
                /

    #   print_u8_bin
    #   print_s8_bin
    
    input   :    
                a <- unsigned byte
                (C) 1 print % 0 , no
    output  :
                /

    #  print_u16_hex
    #  print_s16_hex
    
    input   :    
                a,y <- word
                (C) 1 print % 0 , no
    output  :
                /
                
    #   print_u16_bin
    #   print_s16_bin
    
    input   :    
                a,y <- word
                (C) 1 print % 0 , no
    output  :
                /
                
    #  print_u8_dec 
    #  print_s8_dec 
    
    input   :    
                a <- byte

    output  :
                /
    
    #  print_u16_dec 
    #  print_s16_dec 
    
    input   :    
                a,x <- word

    output  :
                /

    # input_string
    
    ;   input   :   a/y     address string
    ;   output  :           output  string  ,   0
    
;;;
;;
;


