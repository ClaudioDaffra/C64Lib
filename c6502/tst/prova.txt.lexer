
Lexer ::
Lexer::    getChar -> return sym=sym_char [ 2 ] [              1]
Lexer::  makeToken -> return Token::vToken.size(); [ 1 ] 
Lexer::    getChar -> return sym=sym_char [ 2 ] [              ;]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              c]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              o]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              m]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              m]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              e]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              n]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              t]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              o]
Lexer::    getChar -> return sym=sym_char [ 2 ] [               ]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              6]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              4]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              t]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              a]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              s]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              s]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              N]
Lexer::    getChar -> return sym=sym_char [ 2 ] [               ]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              2]
Lexer::  makeToken -> return Token::vToken.size(); [ 2 ] 
Lexer::    getChar -> return sym=sym_char [ 2 ] [              /]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              /]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              c]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              o]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              m]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              m]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              e]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              n]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              t]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              o]
Lexer::    getChar -> return sym=sym_char [ 2 ] [               ]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              C]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              +]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              +]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              N]
Lexer::    getChar -> return sym=sym_char [ 2 ] [               ]
Lexer::    getChar -> return sym=sym_char [ 2 ] [               ]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              3]
ungetchar()
Lexer::    getChar -> return sym=sym_char [ 2 ] [              3]
Lexer::  makeToken -> return Token::vToken.size(); [ 3 ] 
Lexer::    getChar -> return sym=sym_char [ 2 ] [              N]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              /]
ungetchar()
Lexer::    getChar -> return sym=sym_char [ 2 ] [              /]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              *]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              *]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              /]
Lexer::    getChar -> return sym=sym_char [ 2 ] [              4]
Lexer::  makeToken -> return Token::vToken.size(); [ 4 ] 
Lexer::    getChar -> return sym=sym_end ;
Lexer::  makeToken -> return Token::vToken.size(); [ 5 ] 
Lexer :: end
